#!/usr/bin/env zsh
set -eu

source "${HOME}/dotfiles/lib/common.zsh"

# Basic setup
dotmsg "preparing directories..."
mkdir -p ~/code
mkdir -p ~/.config
mkdir -p ~/local

# macOS settings
if is_macos; then
  dotmsg "performing macOS setup..."
  source "${DOTFILES}/lib/install-mac.zsh"
else
  dotmsg "performing Linux setup..."
  source "${DOTFILES}/lib/install-linux.zsh"
fi

# zsh
zsh_path=`which zsh`
log_todo "Ensure zsh in /etc/shells and set default shell:
    chsh -s ${zsh_path}"

dotmsg "configuring zsh..."
zshenv=$HOME/.zshenv
zdotdir=$DOTFILES/zsh
zpreztodir=$zdotdir/.zprezto

# rewrite zshenv with our settings
[[ -s $zshenv ]] && rm -f $zshenv
echo 'ZDOTDIR="'$zdotdir'"' > $zshenv

# Prezto + prezto-contrib
if [ ! -d $zpreztodir ]; then
  dotmsg "installing prezto..."
  git clone --recursive https://github.com/sorin-ionescu/prezto.git $zpreztodir
  git clone --recurse-submodules https://github.com/belak/prezto-contrib $zpreztodir/contrib
fi

dotmsg "configuring vim..."
rm -rf ~/.vim
rm -f ~/.vimrc

cfg_dir=$DOTFILES/vim
vim_dir=$cfg_dir/.vim
vimrc=$cfg_dir/.vimrc

ln -s $vim_dir $HOME/.vim
ln -s $vimrc $HOME/.vimrc

# tmux
dotmsg "configuring tmux..."
tmux_plugins=$HOME/.tmux/plugins
tmuxconf=$HOME/.tmux.conf
rm -f $tmuxconf
ln -s $DOTFILES/tmux/.tmux.conf $tmuxconf

if [ ! -d $tmux_plugins ]; then
  dotmsg "installing tmux plugins..."
  mkdir -p $tmux_plugins
  git clone https://github.com/tmux-plugins/tpm $tmux_plugins/tpm
  $tmux_plugins/tpm/bin/install_plugins
fi

# git
gitcfg=$HOME/.gitconfig
if [ ! -s $gitcfg ]; then
  dotmsg "setting up git config"
  echo "[include]
  path = $DOTFILES/git/config" > $gitcfg
fi


# asdf
asdf_root="${HOME}/.asdf"
if [ ! -d $asdf_root ]; then
  dotmsg "installing asdf-vm..."
  git clone https://github.com/asdf-vm/asdf.git $asdf_root
  pushd $asdf_root >/dev/null
  git checkout "$(git describe --abbrev=0 --tags)"
  popd >/dev/null
  . ${asdf_root}/asdf.sh # make asdf available for the next step
fi

asdf_plugins=(
  "python"
  "node"
  "golang"
)

install_node_asdf() {
  asdf plugin add nodejs
  dotmsg "updating nodejs keyring..."
  bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring
}

for p in $asdf_plugins; do
  if asdf which $p >/dev/null 2>&1; then
    continue
  fi
  dotmsg "installing asdf/$p..."
  if [ $p = "node" ]; then
    install_node_asdf
  else
    set +e
    asdf plugin add $p
    set -e
  fi
  log_todo "to install $p versions:
    asdf list-all $p
    asdf install $p [version]"
done

log_todo "Restart shell for all changes to take effect"
print_result
